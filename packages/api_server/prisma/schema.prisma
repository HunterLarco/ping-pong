/// Game

model Game {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  playerIds String[] @db.ObjectId

  dateCreated DateTime @default(now())
}

/// User

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  phoneNumber String @unique
  name String

  dateCreated DateTime @default(now())
}

/// AuthToken

model AuthToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  scopes AuthScope[]

  // If not set, the token never expires.
  expiry DateTime?

  // If not set, the token can be used any number of times.
  remainingUses Int?

  dateIssued DateTime @default(now())
}

type AuthScope {
  code AuthScopeCode

  // Optional foreign key designating a target for the scope. For example, if
  // this scope provides DOCUMENT_EDITING permissions, the target might be a
  // document key--whereas for a PASSWORD_RESET permission, the target might be
  // a user key.
  target String
}

enum AuthScopeCode {
  PhoneVerification
  UserAuth
}

/// Prisma configuration

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
