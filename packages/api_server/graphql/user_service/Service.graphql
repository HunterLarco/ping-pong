#import 'User.graphql'
#import 'Viewer.graphql'

type Query {
  """
  Uses the "Authorization" header to return the current user's data.
  """
  me: Viewer
}

type Mutation {
  login(request: LoginRequest!): LoginResponse!
  signup(request: SignupRequest!): SignupResponse!
}

### login

input LoginRequest {
  identityVerificationToken: ID!
}

type LoginResponse {
  """
  Token which authenticates requests. Include via the "Authorization" header to
  all requests which require user authentication.
  """
  authToken: ID!
}

### signup

input SignupRequest {
  identityVerificationToken: ID!
  name: String!
}

type SignupResponse {
  """
  Token which authenticates requests. Include via the "Authorization" header to
  all requests which require user authentication.
  """
  authToken: ID!
}
